name: Build Wheels (Trusted Publisher)

on:
  workflow_dispatch:
  push:
    tags:
      - "utils-v*"

permissions:
  id-token: write
  contents: read

jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Verify tag matches pyproject version
        run: |
          python - << 'PY'
          import os, tomllib
          tag = os.environ['GITHUB_REF_NAME'].split('utils-v', 1)[1]
          with open('pyproject.toml','rb') as f:
              version = tomllib.load(f)['project']['version']
          assert version == tag, f"version mismatch: tag={tag} pyproject={version}"
          print('version OK:', version)
          PY

      - run: python -m pip install cibuildwheel==3.1.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_SKIP: "cp38-* cp39-* cp310-* cp312-* cp313-* cp314-*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_BUILD: |
            python -m pip install --upgrade pip setuptools wheel
            python -m pip install meson meson-python ninja
          CIBW_TEST_COMMAND: python -c "import retracesoftware_utils; print('ok')"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: utils-macos-wheels
          path: wheelhouse/*.whl
          retention-days: 7

  publish_pypi:
    if: startsWith(github.ref, 'refs/tags/utils-v')
    needs: build_macos
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: utils-macos-wheels
          path: upload

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: upload
          skip-existing: true
